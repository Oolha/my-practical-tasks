//!--1--
// 1. DOM - —Ü–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è HTML –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ —É –≤–∏–≥–ª—è–¥—ñ –¥–µ—Ä–µ–≤–∞ —Ç–µ–≥—ñ–≤, –¥–µ –∫–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç —î –æ–± º—î–∫—Ç–æ–º(–≤—É–∑–ª–æ–º).
// –¶—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ–∑–≤–æ–ª—è—î JavaScript –≤–∑–∞—î–º–æ–¥—ñ—è—Ç–∏ –∑ HTML –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Ç–∞ –º–∞–Ω—ñ–ø—É–ª—é–≤–∞—Ç–∏ –Ω–∏–º–∏.

//!--–ó–∞–≤–¥–∞–Ω–Ω—è-1.1-

// –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –º–∞—Å—Å–∏–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –≤—ã–≤–æ–¥–∏—Ç—å –∏—Ö –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞.

const showListOfElements = (array) => {
  if (!Array.isArray(array)) return;

  const listItems = array.map((arr) => `<li>${arr}</li>`);

  const list = `<ul>${listItems.join("")}</ul>`;

  document.body.innerHTML += list;
};

const firstArray = ["hello", "world", "Kiev", "Kharkiv", "Odessa", "Lviv"];
const secondArray = ["1", "2", "3", "sea", "user", 23];

//!--–ó–∞–≤–¥–∞–Ω–Ω—è-1.2-

// - ??? –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥. –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–∞–π–º–µ—Ä –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞ (—Ç–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥—ã) –ø–µ—Ä–µ–¥ –æ—á–∏—â–µ–Ω–∏–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
// - –ï—Å–ª–∏ –≤–Ω—É—Ç—Ä–∏ –º–∞—Å—Å–∏–≤–∞ –æ–¥–Ω–∏–º –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –±—É–¥–µ—Ç –µ—â–µ –æ–¥–∏–Ω –º–∞—Å—Å–∏–≤ –∏–ª–∏ –æ–±—ä–µ–∫—Ç, –≤—ã–≤–æ–¥–∏—Ç—å –µ–≥–æ –∫–∞–∫ –≤–ª–æ–∂–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫.

let seconds = 0;

const timer = document.createElement("button");
timer.textContent = `–û—á–∏—Å—Ç–∏—Ç–∏`;

timer.addEventListener("click", () => {
  seconds = 5;

  timer.textContent = `–æ—á–∏—â–µ–Ω–Ω—è –∑–∞ ${seconds}`;

  const timeInterval = setInterval(() => {
    seconds--;
    timer.textContent = `–û—á–∏—â–µ–Ω–Ω—è –∑–∞ ${seconds} —Å–µ–∫`;

    if (seconds <= 0) {
      clearInterval(timeInterval);
      document.body.innerHTML = "";
    }
  }, 1000);
});

showListOfElements(firstArray);
showListOfElements(secondArray);

document.body.appendChild(timer);

//!--–ó–∞–≤–¥–∞–Ω–Ω—è-2.1-

// –ù–∞–ø–∏—Å–∞—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –∫–Ω–æ–ø–∫–∏ "–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª—å".

const form = document.getElementById("form");
const passwordBtns = document.querySelectorAll(".toggle-password");
const errorMessage = document.getElementById("passwordError");
errorMessage.style.display = "none";

passwordBtns.forEach((button) =>
  button.addEventListener("click", function () {
    const targetId = this.getAttribute("data-target");
    const passwordField = document.getElementById(targetId);

    if (passwordField.type === "password") {
      passwordField.type = "text";

      this.querySelector(".eye-icon").style.display = "none";
      this.querySelector(".eye-slash-icon").style.display = "block";
    } else {
      passwordField.type = "password";
      this.querySelector(".eye-icon").style.display = "block";
      this.querySelector(".eye-slash-icon").style.display = "none";
    }
  })
);

form.addEventListener("submit", function (e) {
  e.preventDefault();

  const password1 = document.getElementById("password1").value;
  const password2 = document.getElementById("password2").value;

  if (password1 === password2) {
    errorMessage.style.display = "none";
    alert("You are welcome");
  } else {
    errorMessage.style.display = "block";
  }
});

//!--3--

// –†–µ–∫—É—Ä—Å—ñ—è - —Ü–µ —Ç–µ—Ä–º—ñ–Ω –≤ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—ñ, —è–∫–∏–π –æ–∑–Ω–∞—á–∞—î, —â–æ —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫–∞—î —Å–∞–º—É —Å–µ–±–µ.
// –†–µ–∫—É—Ä—Å—ñ—è –∫–æ—Ä–∏—Å–Ω–∞ –≤ —Ç–∏—Ö –≤–∏–ø–∞–¥–∫–∞—Ö, –∫–æ–ª–∏ –∑–∞–≤–¥–∞–Ω–Ω—è –º–æ–∂–µ –±—É—Ç–∏ —Ä–æ–∑–¥—ñ–ª–µ–Ω–µ –Ω–∞ –¥–µ–∫—ñ–ª—å–∫–∞ —Ç–æ–≥–æ –∂ —Ä–æ–¥—É –∑–∞–≤–¥–∞–Ω—å, –∞–ª–µ –ø—Ä–æ—Å—Ç—ñ—à–∏—Ö.

let company = {
  sales: [
    { name: "John", salary: 1000 },
    { name: "Alice", salary: 1600 },
  ],
  development: {
    sites: [
      { name: "Peter", salary: 2000 },
      { name: "Alex", salary: 1800 },
    ],
    internals: [{ name: "Jack", salary: 1300 }],
  },
};

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É —Å—É–º–∏ –∑–∞—Ä–ø–ª–∞—Ç
function sumSalaries(department) {
  if (Array.isArray(department)) {
    // –≤–∏–ø–∞–¥–æ–∫ (1)
    return department.reduce((prev, current) => prev + current.salary, 0); // —Å—É–º–∞ –º–∞—Å–∏–≤—É
  } else {
    // –≤–∏–ø–∞–¥–æ–∫ (2)
    let sum = 0;
    for (let subdep of Object.values(department)) {
      sum += sumSalaries(subdep); // —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –¥–ª—è –ø—ñ–¥–≤—ñ–¥–¥—ñ–ª—ñ–≤, —Å—É–º–º—É—é—á–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    }
    return sum;
  }
}

// alert(sumSalaries(company));

//!--–∑–∞–≤–¥–∞–Ω–Ω—è-3.1--
// –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–¥—Å—á–µ—Ç–∞ —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞ —á–∏—Å–ª–∞.

// –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:

// - –°—á–∏—Ç–∞—Ç—å —Å –ø–æ–º–æ—â—å—é –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤–≤–µ–¥–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
// - –° –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ—Å—á–∏—Ç–∞—Ç—å —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä–æ–µ –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∏ –≤—ã–≤–µ—Å—Ç–∏ –µ–≥–æ –Ω–∞ —ç–∫—Ä–∞–Ω.
// - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å ES6 –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Ä–µ–º–µ–Ω—ã–º–∏ –∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏.

function factorial(n) {
  return n ? n * factorial(n - 1) : 1;
}

const userNumber = parseInt(prompt("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è —Ñ–∞–∫—Ç–æ—Ä—ñ–∞–ª—É:"));

// alert(`–§–∞–∫—Ç–æ—Ä—ñ–∞–ª —á–∏—Å–ª–∞ ${userNumber} –¥–æ—Ä—ñ–≤–Ω—é—î ${factorial(userNumber)}`);

//!--–∑–∞–≤–¥–∞–Ω–Ω—è-4.1--

// –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤

// #### –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:

// - –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é `filterCollection()`, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª–∏—Ç –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ª—é–±–æ–π –º–∞—Å—Å–∏–≤ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º.
// - –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –Ω–∞ –≤—Ö–æ–¥ —Ç—Ä–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–∞:
//   - –º–∞—Å—Å–∏–≤, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–¥–æ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å
//   - —Å—Ç—Ä–æ–∫—É —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–¥–æ –Ω–∞–π—Ç–∏ –≤–Ω—É—Ç—Ä–∏ –º–∞—Å—Å–∏–≤–∞ (–æ–¥–Ω–æ —Å–ª–æ–≤–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–º)
//   - boolean —Ñ–ª–∞–≥, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å, –Ω–∞–¥–æ –ª–∏ –Ω–∞–π—Ç–∏ –≤—Å–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ (`true`), –ª–∏–±–æ –∂–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∏—Ö (`false`)
//   - —á–µ—Ç–≤–µ—Ä—Ç—ã–π –∏ –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –±—É–¥—É—Ç —è–≤–ª—è—Ç—å—Å—è –∏–º–µ–Ω–∞–º–∏ –ø–æ–ª–µ–π, –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞–¥–æ –∏—Å–∫–∞—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ. –ï—Å–ª–∏ –ø–æ–ª–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–µ –Ω–∞ –ø–µ—Ä–≤–æ–º —É—Ä–æ–≤–Ω–µ –æ–±—ä–µ–∫—Ç–∞, –∫ –Ω–µ–º—É –Ω–∞–¥–æ —É–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–π –ø—É—Ç—å —á–µ—Ä–µ–∑ `.`. –£—Ä–æ–≤–µ–Ω—å –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ–ª–µ–π –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±–æ–π.
// - –ü—Ä–∏–º–µ—Ä –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏:

// ```javascript
// filterCollection(
//   vehicles,
//   "en_US Toyota",
//   true,
//   "name",
//   "description",
//   "contentType.name",
//   "locales.name",
//   "locales.description"
// );
// ```

const filterCollection = (arr, keyWords, boolean, ...fields) => {
  const keywords = keyWords.split(" ");

  const getNestedValue = (obj, path) => {
    const keys = path.split(".");
    let value = obj;

    for (const key of keys) {
      if (value === null || value === undefined) return undefined;
      value = value[key];
    }
    return value;
  };

  return arr.filter((el) => {
    const keywordsMatches = keywords.map((word) => {
      for (const field of fields) {
        const value = getNestedValue(el, field);

        if (value !== undefined && value !== null) {
          const stringValue = String(value).toLowerCase();

          if (stringValue.includes(word.toLowerCase())) {
            return true;
          }
        }
      }
      return false;
    });
    if (boolean) {
      return keywordsMatches.every((match) => match === true);
    } else {
      return keywordsMatches.some((match) => match === true);
    }
  });
};

const vehicles = [
  {
    id: 1,
    name: "Toyota Corolla",
    description: "–ï–∫–æ–Ω–æ–º—ñ—á–Ω–∏–π —Å–µ–¥–∞–Ω",
    contentType: {
      name: "car",
    },
    locales: {
      name: "Toyota Corolla en_US",
      description: "Economic sedan for US market",
    },
  },
  {
    id: 2,
    name: "Honda Civic",
    description: "–°—É—á–∞—Å–Ω–∏–π –º—ñ—Å—å–∫–∏–π –∞–≤—Ç–æ–º–æ–±—ñ–ª—å",
    contentType: {
      name: "car",
    },
    locales: {
      name: "Honda Civic en_US",
      description: "Modern city car for US market",
    },
  },
];

const toyotaCars = filterCollection(
  vehicles,
  "Toyota",
  true,
  "name",
  "description"
);
console.log(toyotaCars.map((car) => car.name));

//!-----------------OO–ü---

// **1. –Ü–Ω–∫–∞–ø—Å—É–ª—è—Ü—ñ—è (Encapsulation)**

// üìå **–°–∏—Ç—É–∞—Ü—ñ—è –∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∂–∏—Ç—Ç—è:**
// üîπ –£—è–≤–∏, —â–æ —É —Ç–µ–±–µ —î **–±–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π —Ä–∞—Ö—É–Ω–æ–∫**.
// üîπ –¢–∏ –Ω–µ –º–æ–∂–µ—à –ø—Ä–æ—Å—Ç–æ –≤–∑—è—Ç–∏ —ñ –∑–º—ñ–Ω–∏—Ç–∏ –±–∞–ª–∞–Ω—Å —Ä–∞—Ö—É–Ω–∫—É –Ω–∞–ø—Ä—è–º—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, +1 000 000$).
// üîπ –©–æ–± –∑–º—ñ–Ω–∏—Ç–∏ –±–∞–ª–∞–Ω—Å, —Ç–∏ –º–∞—î—à **–∑—Ä–æ–±–∏—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é (–ø–æ–∫–ª–∞—Å—Ç–∏/–∑–Ω—è—Ç–∏ –≥—Ä–æ—à—ñ)** —á–µ—Ä–µ–∑ –±–∞–Ω–∫.

// **‚û° –ó–∞–≤–¥–∞–Ω–Ω—è:**
// 1. –°—Ç–≤–æ—Ä–∏ **–∫–ª–∞—Å `BankAccount`**.
// 2. –î–æ–¥–∞–π **–ø—Ä–∏–≤–∞—Ç–Ω—É –∑–º—ñ–Ω–Ω—É `balance`** (–±–∞–ª–∞–Ω—Å).
// 3. –†–µ–∞–ª—ñ–∑—É–π –º–µ—Ç–æ–¥–∏:
//    - `deposit(amount)` ‚Äì –ø–æ–∫–ª–∞—Å—Ç–∏ –≥—Ä–æ—à—ñ.
//    - `withdraw(amount)` ‚Äì –∑–Ω—è—Ç–∏ –≥—Ä–æ—à—ñ (–∞–ª–µ –Ω–µ –±—ñ–ª—å—à–µ, –Ω—ñ–∂ —î –Ω–∞ –±–∞–ª–∞–Ω—Å—ñ).
//    - `getBalance()` ‚Äì –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –±–∞–ª–∞–Ω—Å.
// 4. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è, —â–æ **–∑–º—ñ–Ω—é–≤–∞—Ç–∏ `balance` –Ω–∞–ø—Ä—è–º—É –Ω–µ –º–æ–∂–Ω–∞**.

class BankAccount {
  #balance = 0;

  constructor(initialBalance = 0) {
    if (initialBalance > 0) {
      this.#balance = initialBalance;
    }
  }
  deposit(amount) {
    if (amount > 0) {
      this.#balance += amount;
      return true;
    }
    return false;
  }
  withdraw(amount) {
    if (amount > 0 && amount <= this.#balance) {
      this.#balance -= amount;
      return true;
    }
    return false;
  }
  getBalance() {
    return this.#balance;
  }
}

const account = new BankAccount(100);

console.log(account.getBalance());

account.deposit(50);
console.log(account.getBalance());

account.withdraw(30);
console.log(account.getBalance());

// ### **2. –ù–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è (Inheritance)**

// üìå **–°–∏—Ç—É–∞—Ü—ñ—è –∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∂–∏—Ç—Ç—è:**
// üîπ –Ñ **–±–∞–∑–æ–≤–∏–π –∫–ª–∞—Å `–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç` (Vehicle)**, —É –Ω—å–æ–≥–æ —î **–º–∞—Ä–∫–∞, –º–æ–¥–µ–ª—å, —Ä—ñ–∫ –≤–∏–ø—É—Å–∫—É**.
// üîπ –í—ñ–¥ `–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç` –º–æ–∂–Ω–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ **–ê–≤—Ç–æ–º–æ–±—ñ–ª—å (Car)** —ñ **–ú–æ—Ç–æ—Ü–∏–∫–ª (Bike)**.
// üîπ –£ `Car` —î —É–Ω—ñ–∫–∞–ª—å–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å `doors` (–∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–≤–µ—Ä–µ–π), —É `Bike` ‚Äì `hasSidecar` (—á–∏ —î –±–æ–∫–æ–≤–∏–π –ø—Ä–∏—á—ñ–ø).

// **‚û° –ó–∞–≤–¥–∞–Ω–Ω—è:**
// 1. –°—Ç–≤–æ—Ä–∏ **–±–∞–∑–æ–≤–∏–π –∫–ª–∞—Å `Vehicle`** (–º–∞—Ä–∫–∞, –º–æ–¥–µ–ª—å, —Ä—ñ–∫).
// 2. –í—ñ–¥ –Ω—å–æ–≥–æ –Ω–∞—Å–ª—ñ–¥—É–π:
//    - `Car` (–¥–æ–¥–∞—î–º–æ `doors`)
//    - `Bike` (–¥–æ–¥–∞—î–º–æ `hasSidecar`)
// 3. –í –∫–æ–∂–Ω–æ–º—É –∫–ª–∞—Å—ñ —Ä–µ–∞–ª—ñ–∑—É–π –º–µ—Ç–æ–¥ `getInfo()`, —è–∫–∏–π –ø–æ–≤–µ—Ä—Ç–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç.

class Vehicle {
  constructor(–º–∞—Ä–∫–∞, –º–æ–¥–µ–ª—å, —Ä—ñ–∫) {
    this.–º–∞—Ä–∫–∞ = –º–∞—Ä–∫–∞;
    this.–º–æ–¥–µ–ª—å = –º–æ–¥–µ–ª—å;
    this.—Ä—ñ–∫ = —Ä—ñ–∫;
  }
  getInfo() {
    return `–ú–∞—à–∏–Ω–∞ –º–∞—Ä–∫–∏ ${this.–º–∞—Ä–∫–∞} –º–æ–¥–µ–ª—ñ ${this.–º–æ–¥–µ–ª—å} —Ç–∞ ${this.—Ä—ñ–∫} —Ä–æ–∫—É`;
  }
}

class Car extends Vehicle {
  constructor(–º–∞—Ä–∫–∞, –º–æ–¥–µ–ª—å, —Ä—ñ–∫, doors) {
    super(–º–∞—Ä–∫–∞, –º–æ–¥–µ–ª—å, —Ä—ñ–∫);
    this.doors = doors;
  }
  getInfo() {
    return `–ú–∞—à–∏–Ω–∞ –º–∞—Ä–∫–∏ ${this.–º–∞—Ä–∫–∞} –º–æ–¥–µ–ª—ñ ${this.–º–æ–¥–µ–ª—å} —Ç–∞ ${this.—Ä—ñ–∫} —Ä–æ–∫—É. –ú–∞—à–∏–Ω–∞ –º–∞—î ${this.doors} –¥–≤–µ—Ä–µ–π`;
  }
}

class Bike extends Vehicle {
  constructor(–º–∞—Ä–∫–∞, –º–æ–¥–µ–ª—å, —Ä—ñ–∫, hasSidecar) {
    super(–º–∞—Ä–∫–∞, –º–æ–¥–µ–ª—å, —Ä—ñ–∫);
    this.hasSidecar = hasSidecar;
  }
  getInfo() {
    return `–ú–æ—Ç–æ—Ü–∏–∫–ª –º–∞—Ä–∫–∏ ${this.–º–∞—Ä–∫–∞} –º–æ–¥–µ–ª—ñ ${this.–º–æ–¥–µ–ª—å} —Ç–∞ ${this.—Ä—ñ–∫} —Ä–æ–∫—É. ${this.hasSidecar ? "–ú–∞—î –±–æ–∫–æ–≤–∏–π –ø—Ä–∏—á—ñ–ø" : "–ë–µ–∑ –±–æ–∫–æ–≤–æ–≥–æ –ø—Ä–∏—á–µ–ø—É"}`;
  }
}

const transport = new Vehicle("Generic", "Transport", 2020);
const car = new Car("Toyota", "Camry", 2022, 4);
const bike = new Bike("Harley-Davidson", "Street 750", 2021, true);

console.log(transport.getInfo());
console.log(car.getInfo());
console.log(bike.getInfo());

// ### **3. –ü–æ–ª—ñ–º–æ—Ä—Ñ—ñ–∑–º (Polymorphism)**

// üìå **–°–∏—Ç—É–∞—Ü—ñ—è –∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∂–∏—Ç—Ç—è:**
// üîπ –Ñ –∫–ª–∞—Å `–¢–≤–∞—Ä–∏–Ω–∞ (Animal)`, —É –∫–æ–∂–Ω–æ—ó —Ç–≤–∞—Ä–∏–Ω–∏ —î –º–µ—Ç–æ–¥ `makeSound()`.
// üîπ –ê–ª–µ **–∫–æ–∂–Ω–∞ —Ç–≤–∞—Ä–∏–Ω–∞ –≤–∏–¥–∞—î —Å–≤—ñ–π —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∑–≤—É–∫**:
//    - `–°–æ–±–∞–∫–∞` ‚Üí "–ì–∞–≤!"
//    - `–ö—ñ—Ç` ‚Üí "–ú—è—É!"
//    - `–ö–æ—Ä–æ–≤–∞` ‚Üí "–ú—É!"

// **‚û° –ó–∞–≤–¥–∞–Ω–Ω—è:**
// 1. –°—Ç–≤–æ—Ä–∏ –∫–ª–∞—Å `Animal` –∑ –º–µ—Ç–æ–¥–æ–º `makeSound()`, —è–∫–∏–π –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–µ—Ä—Ç–∞—î `"–Ø–∫–∏–π—Å—å –∑–≤—É–∫..."`.
// 2. –í—ñ–¥ –Ω—å–æ–≥–æ —Å—Ç–≤–æ—Ä–∏ **3 –∫–ª–∞—Å–∏**: `Dog`, `Cat`, `Cow`.
// 3. –í –∫–æ–∂–Ω–æ–º—É –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á –º–µ—Ç–æ–¥ `makeSound()`, —â–æ–± –≤—ñ–Ω –ø–æ–≤–µ—Ä—Ç–∞–≤ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π –∑–≤—É–∫.

class Animal {
  makeSound() {
    return `–Ø–∫–∏–π—Å—å –∑–≤—É–∫...`;
  }
}
class Dog extends Animal {
  makeSound() {
    return `–ì–∞–≤`;
  }
}
class Cat extends Animal {
  makeSound() {
    return `–ú—è—É`;
  }
}
class Cow extends Animal {
  makeSound() {
    return `My`;
  }
}

const animal = new Animal();
const dog = new Dog();
const cat = new Cat();
const cow = new Cow();

console.log("–ü—Ä–æ—Å—Ç–æ —Ç–≤–∞—Ä–∏–Ω–∞:", animal.makeSound());
console.log("–°–æ–±–∞–∫–∞:", dog.makeSound());
console.log("–ö—ñ—Ç:", cat.makeSound());
console.log("–ö–æ—Ä–æ–≤–∞:", cow.makeSound());

// ### **4. –ê–±—Å—Ç—Ä–∞–∫—Ü—ñ—è (Abstraction)**

// üìå **–°–∏—Ç—É–∞—Ü—ñ—è –∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∂–∏—Ç—Ç—è:**
// üîπ –Ñ **—Å–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏ (`Payment`)**, –∞–ª–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É –∂–∏—Ç—Ç—ñ –≤—ñ–Ω –±—É–≤–∞—î —Ä—ñ–∑–Ω–∏–º:
//    - **–û–ø–ª–∞—Ç–∞ –∫—Ä–µ–¥–∏—Ç–Ω–æ—é –∫–∞—Ä—Ç–∫–æ—é (`CreditCardPayment`)**
//    - **–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ PayPal (`PayPalPayment`)**
// üîπ –£ –∫–æ–∂–Ω–æ–≥–æ —Ç–∏–ø—É –æ–ø–ª–∞—Ç–∏ —Ä—ñ–∑–Ω–∏–π –ø—Ä–æ—Ü–µ—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.

// **‚û° –ó–∞–≤–¥–∞–Ω–Ω—è:**
// 1. –°—Ç–≤–æ—Ä–∏ **–∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–∏–π –∫–ª–∞—Å `Payment`**.
// 2. –í –Ω—å–æ–º—É –¥–æ–¥–∞–π **–º–µ—Ç–æ–¥ `processPayment(amount)`, –∞–ª–µ –±–µ–∑ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó**.
// 3. –í—ñ–¥ –Ω—å–æ–≥–æ —Å—Ç–≤–æ—Ä–∏ –ø—ñ–¥–∫–ª–∞—Å–∏:
//    - `CreditCardPayment` (–ª–æ–≥—ñ–∫–∞ –æ–ø–ª–∞—Ç–∏ –∫–∞—Ä—Ç–∫–æ—é).
//    - `PayPalPayment` (–ª–æ–≥—ñ–∫–∞ –æ–ø–ª–∞—Ç–∏ —á–µ—Ä–µ–∑ PayPal).
// 4. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è, —â–æ –Ω–µ –º–æ–∂–Ω–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±'—î–∫—Ç `Payment`, –∞ –ª–∏—à–µ –π–æ–≥–æ –ø—ñ–¥–∫–ª–∞—Å–∏.

class Payment {
  constructor() {
    if (this.constructor === Payment) {
      throw new Error("–ù–µ –º–æ–∂–Ω–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –µ–∫–∑–µ–º–ø–ª—è—Ä –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ –∫–ª–∞—Å—É Payment");
    }
  }

  processPayment(amount) {
    throw new Error("–ü–æ–º–∏–ª–∫–∞");
  }
}

class CreditCardPayment extends Payment {
  constructor(cardNumber, cvv, expiryDate) {
    super();
    this.cardNumber = cardNumber;
    this.cvv = cvv;
    this.expiryDate = expiryDate;
  }

  processPayment(amount) {
    return `–û–ø–ª–∞—Ç–∞ ${amount} –≥—Ä–Ω. –∫–∞—Ä—Ç–∫–æ—é ${this.cardNumber.slice(-4)} —É—Å–ø—ñ—à–Ω–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞`;
  }
}

class PayPalPayment extends Payment {
  constructor(email) {
    super();
    this.email = email;
  }

  processPayment(amount) {
    return `–û–ø–ª–∞—Ç–∞ ${amount} –≥—Ä–Ω. —á–µ—Ä–µ–∑ PayPal-–∞–∫–∞—É–Ω—Ç ${this.email} —É—Å–ø—ñ—à–Ω–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞`;
  }
}

const creditCard = new CreditCardPayment("1234567890123456", "123", "12/25");
console.log(creditCard.processPayment(1000));

const paypal = new PayPalPayment("user@example.com");
console.log(paypal.processPayment(500));
